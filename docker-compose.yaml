version: '3.8'

services:

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - 80:80
    depends_on:
      go-backend:
        condition: service_healthy
      frontend:
        condition: service_completed_successfully
    networks:
      - app-network

  frontend:
    build:
      context: ./LearningService_Frontend/
    image: frontend:latest
    command: ["npm", "run", "build"]
    networks:
      - app-network
    depends_on:
      go-backend:
        condition: service_healthy
  
  go-backend:
    build:
      context: ./learningservice_backend/
    command: ./main
    ports:
      - 8091:8091
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:8091/ping"]
      interval: 15s
      timeout: 5s
      retries: 2
  
  db:
    restart: always
    build: ./Postgres
    ports:
      - "5432:5432"
    networks:
      - app-network
    user: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_PORT=${DB_PORT}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data:

networks:
  app-network:
    driver: bridge